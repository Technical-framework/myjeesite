<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.test1.dao.TestStudentDao">
    
	<sql id="testStudentColumns">
		a.id AS "id",
		a.name AS "name",
		a.age AS "age",
		a.sex AS "sex",
		a.introduce AS "introduce",
		a.class_id AS "classId",
		a.duties_id AS "dutiesId",
		a.remark AS "remark"
	</sql>
	
	<sql id="testStudentJoins">
	</sql>
    
	<select id="get" resultType="TestStudent">
		SELECT 
			<include refid="testStudentColumns"/>
		FROM test_student a
		<include refid="testStudentJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="TestStudent">
		SELECT 
			<include refid="testStudentColumns"/>
		FROM test_student a
		<include refid="testStudentJoins"/>
		<where>
			
			<if test="name != null and name != ''">
				AND a.name LIKE 
					<if test="dbName == 'oracle'">'%'||#{name}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{name}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{name},'%')</if>
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="TestStudent">
		SELECT 
			<include refid="testStudentColumns"/>
		FROM test_student a
		<include refid="testStudentJoins"/>
		<where>
			
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO test_student(
			name,
			age,
			sex,
			introduce,
			class_id,
			duties_id,
			remark
		) VALUES (
			#{name},
			#{age},
			#{sex},
			#{introduce},
			#{classId},
			#{dutiesId},
			#{remark}
		)
	</insert>
	
	<update id="update">
		UPDATE test_student SET 	
			name = #{name},
			age = #{age},
			sex = #{sex},
			introduce = #{introduce},
			class_id = #{classId},
			duties_id = #{dutiesId},
			remark = #{remark}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		DELETE FROM test_student
		WHERE id = #{id}
	</update>
	
</mapper>